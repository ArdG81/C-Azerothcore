version: '3.9'

# extension field: https://docs.docker.com/compose/compose-file/compose-file-v3/#extension-fields
x-networks: &networks
  networks:
    - ac-network

x-ac-shared-conf: &ac-shared-conf
  <<: *networks
  working_dir: /azerothcore
  depends_on:
    - ac-database

x-ac-dev-server-base: &ac-dev-server-base
  <<: *ac-shared-conf
  tty: true
  image: local/azerothcore/dev-server
  security_opt:
    - seccomp:unconfined
  environment:
    USER_CONF_PATH: "/azerothcore/apps/docker/config-docker.sh"
  build:
    context: .
    dockerfile: ./apps/docker/Dockerfile.dev
    args:
      USER_ID: ${DOCKER_USER_ID:-1000}
      GROUP_ID: ${DOCKER_GROUP_ID:-1000}

services:
#============================
#
# Abstract services to extend
#
#============================

  abstract-bind:
    image: local/azerothcore/abstract-bind
    volumes:
      - .:/azerothcore/
      # env dir shared between services
      # we cannot use /env/dist to avoid permission issues
      - ac-env:/azerothcore/env
      # expose some dist folder outside allowing the host to use them
      - ${DOCKER_CONF:-./conf}:/azerothcore/conf
      - ${DOCKER_ETC:-./env/docker/etc}:/azerothcore/env/dist/etc
      # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
      - ${DOCKER_LOGS:-./env/docker/logs}:/azerothcore/env/dist/logs:delegated
      - ${DOCKER_DATA:-./env/docker/data}:/azerothcore/env/dist/data:delegated
    profiles: [abstract-service] # do not run this

  abstract-no-bind:
    image: local/azerothcore/abstract-no-bind
    volumes:
      - ac-proj:/azerothcore/
    profiles: [abstract-service] # do not run this

#=======================
#
# Applications
#
#=======================


  ac-database:
    <<: *networks
    image: local/azerothcore/database # name of the generated image after built locally
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./apps/docker/Dockerfile.db
    ports:
      - ${DOCKER_DB_EXTERNAL_PORT:-3306}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_DB_ROOT_PASSWORD:-password}
    volumes:
      - type: volume
        source: ac-database
        target: /var/lib/mysql

  ac-worldserver:
    <<: *ac-shared-conf
    extends: ${DOCKER_EXTENDS_BIND:-abstract-bind}
    stdin_open: true
    tty: true
    image: local/azerothcore/worldserver # name of the generated image after built locally
    restart: unless-stopped
    command: "./acore.sh run-worldserver"
    env_file:
        ${DOCKER_AC_ENV_FILE:-conf/dist/env.ac}
    privileged: true
    build:
      context: .
      dockerfile: ./apps/docker/Dockerfile.srv
    ports:
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
    profiles: [app]

  ac-authserver:
    <<: *ac-shared-conf
    extends: ${DOCKER_EXTENDS_BIND:-abstract-bind}
    image: local/azerothcore/authserver # name of the generated image after built locally
    restart: unless-stopped
    command: "./acore.sh run-authserver"
    env_file:
        ${DOCKER_AC_ENV_FILE:-conf/dist/env.ac}
    build:
      context: .
      dockerfile: ./apps/docker/Dockerfile.srv
    ports:
      - ${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724
    profiles: [app]
#======================
#
# Dev services
#
#======================

  ac-dev-server:
    << : *ac-dev-server-base
    extends: ${DOCKER_EXTENDS_BIND:-abstract-bind}
    env_file:
        ${DOCKER_AC_ENV_FILE:-conf/dist/env.ac}
    ports:
      - ${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
    volumes:
      - ac-build:/azerothcore/var/build
    profiles: [dev]

volumes:
  ac-database:
  ac-env:
  ac-build:
  ac-proj:

networks:
  ac-network:
