version: '3.9'
services:
  ac-database:
    image: local/azerothcore/database # name of the generated image after built locally
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/database/Dockerfile
    networks:
      - ac-network
    ports:
      - ${DOCKER_DB_EXTERNAL_PORT:-3306}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_DB_ROOT_PASSWORD:-password}
    volumes:
      - type: volume
        source: ac-database
        target: /var/lib/mysql

  ac-worldserver:
    stdin_open: true
    tty: true
    image: local/azerothcore/worldserver # name of the generated image after built locally
    restart: unless-stopped
    privileged: true
    build:
      context: .
      dockerfile: ./docker/worldserver/Dockerfile
    networks:
      - ac-network
    ports:
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
    volumes:
      - ac-dist:/azerothcore/env/dist
      - type: bind
        source: ${DOCKER_WORLDSERVER_ETC:-./docker/worldserver/etc}
        target: /azerothcore/env/dist/etc
      - type: bind
        source: ${DOCKER_WORLDSERVER_LOGS:-./docker/worldserver/logs}
        target: /azerothcore/env/dist/logs
        bind:
          # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
          propagation: delegated
      - type: bind
        source: ${DOCKER_WORLDSERVER_DATA:-./docker/worldserver/data}
        target: /azerothcore/env/dist/data
        bind:
          # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
          propagation: delegated
    working_dir: /azerothcore
    depends_on:
      - ac-database

  ac-authserver:
    image: local/azerothcore/authserver # name of the generated image after built locally
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/authserver/Dockerfile
    networks:
      - ac-network
    ports:
      - ${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724
    volumes:
      - ac-dist:/azerothcore/env/dist
      - type: bind
        source: ${DOCKER_AUTHSERVER_ETC:-./docker/authserver/etc}
        target: /azerothcore/env/dist/etc
      - type: bind
        source: ${DOCKER_WORLDSERVER_LOGS:-./docker/worldserver/logs}
        target: /azerothcore/env/dist/logs
        bind:
          # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
          propagation: delegated
    depends_on:
      - ac-database


#======================
#
# DEV services
#
#======================

  ac-dev-server-base:
    networks:
      - ac-network
    tty: true
    image: local/azerothcore/dev-server
    security_opt:
      - seccomp:unconfined
    environment:
      USER_CONF_PATH: "/azerothcore/docker/config-docker.sh"
    build:
      context: .
      dockerfile: ./docker/dev-server/Dockerfile
      args:
        USER_ID: ${DOCKER_USER_ID:-1000}
        GROUP_ID: ${DOCKER_GROUP_ID:-1000}
    profiles:
      - astract-service # do not run this

  ac-dev-server-bind:
    extends: ac-dev-server-base
    volumes:
      - .:/azerothcore/
      # installation files shared between services
      - ac-dist:/azerothcore/env/dist
      # build files, we need a volume here to share it with the ac-build process
      - ac-build:/azerothcore/var/build
      - type: bind
        source: ${DOCKER_WORLDSERVER_ETC:-./docker/worldserver/etc}
        target: /azerothcore/env/dist/etc
      - type: bind
        source: ${DOCKER_WORLDSERVER_LOGS:-./docker/worldserver/logs}
        target: /azerothcore/env/dist/logs
        bind:
          # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
          propagation: delegated
      - type: bind
        source: ${DOCKER_WORLDSERVER_DATA:-./docker/worldserver/data}
        target: /azerothcore/env/dist/data
        bind:
          # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
          propagation: delegated
    profiles:
      - astract-service # do not run this

  ac-dev-server-no-bind:
    extends: ac-dev-server-base
    volumes:
      - ac-proj::/azerothcore/
      # installation files shared between services
      - ac-dist:/azerothcore/env/dist
      # build files, we need a volume here to share it with the ac-build process
      - ac-build:/azerothcore/var/build
    profiles:
      - astract-service # do not run this

  ac-dev-server:
    # To maximize the performance on MAC you can change the DOCKER_BASE_DEV_SERVICE variable
    # to "ac-dev-server-no-bind", however it won't bind the host directory inside the container.
    # It means that you need to work directly within the container using a tool
    # like the VScode dev-container of the remote-extension suite
    extends: ${DOCKER_BASE_DEV_SERVICE:-"ac-dev-server-bind"}
    ports:
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
    # This cannot be extended, so we need to define it here
    depends_on:
      - ac-database
    profiles:
      - dev

  ac-build:
    extends: ${DOCKER_BASE_DEV_SERVICE:-"ac-dev-server-bind"}
    command: bash acore.sh compiler build && bash acore.sh db-assembler import-all
    # This cannot be extended, so we need to define it here
    depends_on:
      - ac-database
    profiles:
      - build

volumes:
  ac-database:
  ac-dist:
  ac-build:
  ac-proj:

networks:
  ac-network:
