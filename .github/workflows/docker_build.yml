name: docker-build
on:
  push:
    branches:
      - 'master'
  pull_request:
    types: ['labeled', 'opened', 'synchronize', 'reopened']

concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true

jobs:
  docker-build-n-deploy-dev:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    if: |
      github.repository == 'azerothcore/azerothcore-wotlk'
      && !github.event.pull_request.draft
      && (github.ref == 'refs/heads/master' ||
          contains(github.event.pull_request.labels.*.name, 'run-build') ||
          github.event.label.name == 'run-build')
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1

    steps:
      - name: Remove unneeded tooling due to disk space requirements
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        if: github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name == 'master'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Dev
        if: github.repository == 'azerothcore/azerothcore-wotlk'
        env:
          DOCKER_CLIENT_TIMEOUT: 400
          COMPOSE_HTTP_TIMEOUT: 400
        run: |
          export DOCKER_USER_ID=$(id -u)
          export DOCKER_GROUP_ID=$(id -u)
          version="AzerothCore Rev. $(jq -r '.version' < acore.json)"
          DOCKER_IMAGE_TAG=$version docker compose --profile dev build

      - name: Deploy Dev
        if: github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name == 'master'
        run: |
          docker compose --profile dev push
          version="AzerothCore Rev. $(jq -r '.version' < acore.json)"
          DOCKER_IMAGE_TAG=$version docker compose --profile dev push

  docker-build-n-deploy-prod:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    if: |
      github.repository == 'azerothcore/azerothcore-wotlk'
      && !github.event.pull_request.draft
      && (github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'run-build') || github.event.label.name == 'run-build')
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1

    steps:
      - name: Remove unneeded tooling due to disk space requirements
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        if: github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name == 'master'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache
        uses: actions/cache@v2
        with:
          path: var/docker/ccache
          key: ccache:${{ matrix.os }}:clang:without-modules:${{ github.ref }}:${{ github.sha }}
          restore-keys: |
            ccache:${{ matrix.os }}:clang:without-modules:${{ github.ref }}
            ccache:${{ matrix.os }}:clang:without-modules

      - name: Build Production images
        if: github.repository == 'azerothcore/azerothcore-wotlk'
        env:
          DOCKER_CLIENT_TIMEOUT: 220
          COMPOSE_HTTP_TIMEOUT: 220
        run: |
          export DOCKER_USER_ID=$(id -u)
          export DOCKER_GROUP_ID=$(id -u)
          docker compose --profile app build
          version="AzerothCore Rev. $(jq -r '.version' < acore.json)"
          DOCKER_IMAGE_TAG=$version ./acore.sh docker build
          # create the container to allow the copy right after
          docker compose create ac-build
          docker compose cp ac-build:/azerothcore/var/ccache var/docker/

      - name: Deploy Production images
        if: github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name == 'master'
        run: |
          docker compose --profile app push
          version="AzerothCore Rev. $(jq -r '.version' < acore.json)"
          DOCKER_IMAGE_TAG=$version docker compose --profile app push


  dispatch-acore-docker:
    needs: [ docker-build-n-deploy-prod , docker-build-n-deploy-dev]
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        if: github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name == 'master'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.ACORE_DOCKER_REPO_ACCESS_TOKEN }}
          repository: azerothcore/acore-docker
          event-type: azerothcore-new-images
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
