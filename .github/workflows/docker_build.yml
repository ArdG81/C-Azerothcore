name: docker-build
on:
  push:
    branches:
      - '**'         # matches every branch
      - '!coverity_scan'   # excludes coverity_scan
  pull_request:

jobs:
  docker-build-n-deploy:
    strategy:
      fail-fast: true
    runs-on: ubuntu-20.04
    if: github.repository == 'azerothcore/azerothcore-wotlk'
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      BUILDKIT_INLINE_CACHE: 1

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - uses: actions/checkout@v2

      - name: Configure
        run: |
          docker --version
          docker-compose --version

      - name: Cache
        uses: actions/cache@v2
        with:
          path: var/docker/ccache
          key: ccache:ubuntu-20.04:clang:without-modules:${{ github.ref }}:${{ github.sha }}
          restore-keys: |
            ccache:ubuntu-20.04:clang:without-modules:${{ github.ref }}
            ccache:ubuntu-20.04:clang:without-modules

      - name: Build
        env:
          #DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
          DOCKER_VOL_CCACHE: ./var/docker/ccache
          DOCKER_VOL_BUILD: ./var/docker/build
          DOCKER_VOL_BIN: ./env/dist/bin
        run: |
          export DOCKER_USER_ID=$(id -u)
          export DOCKER_GROUP_ID=$(id -u)

          docker-compose --profile all build --parallel ac-build
          docker-compose run --rm ac-build bash apps/docker/docker-build-prod.sh
          docker-compose --profile prod build --parallel

      - name: Login to Docker Hub
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy
        #env:
        #  DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        run: |
          docker-compose --profile all --profile prod push
