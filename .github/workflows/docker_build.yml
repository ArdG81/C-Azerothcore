name: docker-build
on:
  push:
    branches:
      - 'master'
  pull_request:
    types: ['labeled', 'opened', 'synchronize', 'reopened']

concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true

jobs:
  docker-build-n-deploy-dev:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    if: |
      github.repository == 'azerothcore/azerothcore-wotlk'
      && !github.event.pull_request.draft
      && (github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'run-build') || github.event.label.name == 'run-build')
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      BUILDKIT_INLINE_CACHE: 1

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - uses: actions/checkout@v2

      - name: Configure
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          docker --version
          docker compose --version

      - name: Login to Docker Hub
        if: github.repository == 'azerothcore/azerothcore-wotlk' && steps.extract_branch.outputs.branch == 'master'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Dev
        if: github.repository == 'azerothcore/azerothcore-wotlk'
        env:
          #DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
          DOCKER_CLIENT_TIMEOUT: 400
          COMPOSE_HTTP_TIMEOUT: 400
        run: |
          export DOCKER_USER_ID=$(id -u)
          export DOCKER_GROUP_ID=$(id -u)
          # pull the images first to load the docker cache layers
          ./acore.sh docker pull
          ./acore.sh docker build
          docker compose build ac-dev-server

      - name: Deploy Dev
        #env:
        #  DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        if: github.repository == 'azerothcore/azerothcore-wotlk' && steps.extract_branch.outputs.branch == 'master'
        run: |
          docker compose --profile dev --profile local push

  docker-build-n-deploy-prod:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    if: |
      github.repository == 'azerothcore/azerothcore-wotlk'
      && !github.event.pull_request.draft
      && (github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'run-build') || github.event.label.name == 'run-build')
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      BUILDKIT_INLINE_CACHE: 1

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - uses: actions/checkout@v2

      - name: Configure
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          docker --version
          docker compose --version

      - name: Login to Docker Hub
        if: github.repository == 'azerothcore/azerothcore-wotlk' && steps.extract_branch.outputs.branch == 'master'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Production images
        if: github.repository == 'azerothcore/azerothcore-wotlk'
        env:
          #DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
          DOCKER_CLIENT_TIMEOUT: 220
          COMPOSE_HTTP_TIMEOUT: 220
        run: |
          export DOCKER_USER_ID=$(id -u)
          export DOCKER_GROUP_ID=$(id -u)
          # pull the images first to load the docker cache layers
          ./acore.sh docker prod:pull
          ./acore.sh docker prod:build
          # create the container to allow the copy right after
          docker compose create ac-test-build
          docker compose cp ac-test-build:/azerothcore/var/ccache var/docker/
          echo "ccache exported"

      - name: Deploy Production images
        #env:
        #  DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        if: github.repository == 'azerothcore/azerothcore-wotlk' && steps.extract_branch.outputs.branch == 'master'
        run: |
          docker compose --profile prod push
